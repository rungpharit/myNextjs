{"ast":null,"code":"const express = require('express');\n\nconst app = express();\n\nconst path = require('path');\n\nconst uuid = require('uuid');\n\nconst mongoose = require('mongoose');\n\nconst TodoList = require('./models/todos'); //Connect mongoDB\n\n\nmongoose.connect('mongodb://localhost:27017/node-api', {\n  useNewUrlParser: true\n}); //Handle Error\n\nmongoose.connection.on('error', err => {\n  console.error('MongoDB error', err);\n}); //Body Parser Middleware\n\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\nconst todos = [{}];\napp.get('/', (req, res) => {\n  res.send('<div>hello</div>');\n}); //Get Data\n\napp.get('/api/todos', async (req, res) => {\n  const todos = await TodoList.find({});\n  res.json(todos);\n}); //Insert Data\n\napp.post('/api/todos', async (req, res) => {\n  const payload = req.body;\n  const todolist = new TodoList(payload);\n  await todolist.save();\n  res.status(201).end();\n}); //Delete Data\n\napp.delete('/api/todos/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  console.log(id);\n  await TodoList.findByIdAndDelete(id);\n  res.json({\n    msg: 'dele'\n  });\n  res.status(204).end();\n});\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));","map":{"version":3,"sources":["D:/XAMPP/htdocs/learning/nextjs/nextjs_todo/server.js"],"names":["express","require","app","path","uuid","mongoose","TodoList","connect","useNewUrlParser","connection","on","err","console","error","use","json","urlencoded","extended","todos","get","req","res","send","find","post","payload","body","todolist","save","status","end","delete","id","params","log","findByIdAndDelete","msg","PORT","process","env","listen"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,MAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,gBAAD,CAAxB,C,CAEA;;;AACAI,QAAQ,CAACE,OAAT,CAAiB,oCAAjB,EAAuD;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAvD,E,CAEA;;AACAH,QAAQ,CAACI,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgCC,GAAG,IAAI;AACrCC,EAAAA,OAAO,CAACC,KAAR,CAAc,eAAd,EAA+BF,GAA/B;AACD,CAFD,E,CAIA;;AACAT,GAAG,CAACY,GAAJ,CAAQd,OAAO,CAACe,IAAR,EAAR;AACAb,GAAG,CAACY,GAAJ,CAAQd,OAAO,CAACgB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEA,MAAMC,KAAK,GAAG,CAAC,EAAD,CAAd;AAEAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAKC,GAAL,KAAa;AACxBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,kBAAT;AACD,CAFD,E,CAIA;;AACApB,GAAG,CAACiB,GAAJ,CAAQ,YAAR,EAAsB,OAAOC,GAAP,EAAWC,GAAX,KAAmB;AACvC,QAAMH,KAAK,GAAG,MAAMZ,QAAQ,CAACiB,IAAT,CAAc,EAAd,CAApB;AACAF,EAAAA,GAAG,CAACN,IAAJ,CAASG,KAAT;AACD,CAHD,E,CAKA;;AACAhB,GAAG,CAACsB,IAAJ,CAAS,YAAT,EAAuB,OAAOJ,GAAP,EAAWC,GAAX,KAAmB;AACxC,QAAMI,OAAO,GAAGL,GAAG,CAACM,IAApB;AACA,QAAMC,QAAQ,GAAG,IAAIrB,QAAJ,CAAamB,OAAb,CAAjB;AACA,QAAME,QAAQ,CAACC,IAAT,EAAN;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD,CALD,E,CAOA;;AACA5B,GAAG,CAAC6B,MAAJ,CAAW,gBAAX,EAA6B,OAAOX,GAAP,EAAWC,GAAX,KAAmB;AAC9C,QAAM;AAACW,IAAAA;AAAD,MAAOZ,GAAG,CAACa,MAAjB;AACArB,EAAAA,OAAO,CAACsB,GAAR,CAAYF,EAAZ;AACA,QAAM1B,QAAQ,CAAC6B,iBAAT,CAA2BH,EAA3B,CAAN;AAEAX,EAAAA,GAAG,CAACN,IAAJ,CAAS;AAACqB,IAAAA,GAAG,EAAC;AAAL,GAAT;AACAf,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AAED,CARD;AAUA,MAAMO,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAnC,GAAG,CAACsC,MAAJ,CAAWH,IAAX,EAAgB,MAAMzB,OAAO,CAACsB,GAAR,CAAa,0BAAyBG,IAAK,EAA3C,CAAtB","sourcesContent":["const express = require('express');\r\nconst app = express(); \r\nconst path = require('path');\r\nconst uuid = require('uuid');\r\nconst mongoose = require('mongoose');\r\nconst TodoList = require('./models/todos');\r\n\r\n//Connect mongoDB\r\nmongoose.connect('mongodb://localhost:27017/node-api', { useNewUrlParser: true })\r\n\r\n//Handle Error\r\nmongoose.connection.on('error', err => {\r\n  console.error('MongoDB error', err)\r\n})\r\n\r\n//Body Parser Middleware\r\napp.use(express.json())\r\napp.use(express.urlencoded({ extended: false }));\r\n\r\nconst todos = [{}]\r\n\r\napp.get('/', (req,res) => {\r\n  res.send('<div>hello</div>');\r\n});\r\n\r\n//Get Data\r\napp.get('/api/todos', async (req,res) => {\r\n  const todos = await TodoList.find({});\r\n  res.json(todos)\r\n});\r\n\r\n//Insert Data\r\napp.post('/api/todos', async (req,res) => {\r\n  const payload = req.body;\r\n  const todolist = new TodoList(payload);\r\n  await todolist.save()\r\n  res.status(201).end();\r\n});\r\n\r\n//Delete Data\r\napp.delete('/api/todos/:id', async (req,res) => {\r\n  const {id} = req.params;\r\n  console.log(id)\r\n  await TodoList.findByIdAndDelete(id)\r\n\r\n  res.json({msg:'dele'})\r\n  res.status(204).end()\r\n \r\n})\r\n\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.listen(PORT,() => console.log(`Server started on port ${PORT}`));"]},"metadata":{},"sourceType":"script"}